 Login System (Authentication and authorization)
 ----------------------------------------------
 Cookies and session save data at client envn and server env.  respectively.

 Authentication system is a way to check the validity of username
 and password and authorization is the system to determine  whether logged user has permission or previleges to perform  tasks or not.

 In Login system, we will create "LoginFilter" which intercept
 each request made to the application. In doFilter method we will
 check the session or cookie key and if it is exists then
 it will proceed the "chain", otherwise it stops it. 
 
 Example: In our app, we have three types of users (Each user type is also known as "Role") -- Admin, Manager, Clerk. Our app has different task of each user and nobody can perform any task without logged in and each role has desiginated set of tasks.


We have following app structure:

/webapp/
       |
       |-----/admin
                 admin pages
       |----/manager
       |
       |----/clerk
       |
       | index.jsp
       | login.jsp


1. Create table Login
   (
     user_name varchar(30) primary key,
     user_pass varchar(40),
     user_email varchar(100),
     user_role varchar(15),
     question varchar(50),
     answer varchar(50)
    )
2. Add "Admin" user

 insert into login values ('admin','admin,1234','admin@gmail.com','admin','Name of your birth place','meh');

3. Create Login bean (model) class 

4. Create LoginDao class

5. Create Login servlet.

 code in doGet:

    HttpSession session = request.getSession();
    session.removeAttribute("isLogin");
    session.removeAttribute("userRole");
    request.getRequestDispatcher("/login.jsp")
           .forward(request,response);   

 [Note: Add following url-pattern /login, /admin/login, /manager/login, /clerk/login]


