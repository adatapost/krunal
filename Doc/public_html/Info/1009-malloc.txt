 void *malloc(size/length) - Returns memory address of allocated
			     heap.

  int *p = (int *)malloc(12); //bytes 3 * 4 bytes

  int *p = (int *)malloc(3*sizeof(int));

  *(p+0) = 10;
  *(p+1) = 20;  
  *(p+2) = 30;

  printf("\n%d  %d  %d", *p, *(p+1), *(p+2));
  
  free(p); //release memory

LinkedList:

 struct List {
     int no;
     struct List *next;
 };

 
 struct List *first,*curr,*newNode;

 curr=first = (struct List *) malloc(sizeof(struct List));

 first->no = 10;
 
 newNode = (struct List *) malloc(sizeof(struct List));
 newNode->no  = 20;
 curr->next = newNode;
 curr=curr->next;

 newNode = (struct List *) malloc(sizeof(struct List));
 newNode->no  = 30;
 curr->next = newNode;
 curr=curr->next;

 newNode = (struct List *) malloc(sizeof(struct List));
 newNode->no  = 40;
 curr->next = newNode;
 curr=curr->next;
 
 //stop the list
 curr->next = NULL;

 //Print
 curr= first;

 while(curr!=NULL)
 {
   printf("\n%d",curr->no);
   curr=curr->next;
  }

//Free
 
  curr = first->next;
  while(curr!=null) {
    free(first);
    first = curr;
    curr = first->next;
  }

  



    